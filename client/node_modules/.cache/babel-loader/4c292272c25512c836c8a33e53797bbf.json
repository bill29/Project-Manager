{"ast":null,"code":"var _jsxFileName = \"E:\\\\Workspace\\\\project-manager\\\\src\\\\components\\\\RecommendComponent.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../components/header\";\nimport MovieItemComponent from \"../components/MovieItemComponent\";\nimport Footer from \"../components/Footer\";\nimport axios from \"axios\";\n\nclass Recommended extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeStatus = id => {\n      console.log(\"movie id:\" + id);\n      this.state.listMovies.map((item, index) => {\n        if (index === id) {\n          item.isLiked = !item.isLiked;\n          console.log(\"status: \" + item.isLiked);\n          this.state.listMovies[id] = item;\n          this.setState({\n            listMovies: this.state.listMovies\n          });\n          localStorage.setItem(\"list\", JSON.stringify(this.state.listMovies));\n        }\n      });\n    };\n\n    this.state = {\n      listMovies: [],\n      user: this.props.state.user,\n      loggedInStatus: this.props.state.loggedInStatus\n    };\n    this.showListMovieLiked = this.showListMovieLiked.bind(this);\n  }\n\n  getList() {\n    axios.get(\"http://localhost:5000/api/recommend/1\", (req, res) => {\n      if (res.data.status === \"success\") {\n        this.setState({\n          listMovies: res.data.list\n        });\n      }\n    });\n  }\n\n  componentWillMount() {\n    let list = [];\n    list = JSON.parse(localStorage.getItem(\"list\"));\n    this.setState({\n      listMovies: list\n    });\n  }\n\n  showListMovieLiked(listMovies) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, listMovies != null ? listMovies.map((movie, index) => {\n      if (movie.isLiked) return /*#__PURE__*/React.createElement(MovieItemComponent, {\n        key: index,\n        id: index,\n        name: movie.name,\n        description: movie.description,\n        rateScore: movie.rateScore,\n        actors: movie.actors,\n        releaseDate: movie.releaseDate,\n        imageUrl: movie.imageUrl,\n        isLiked: movie.isLiked,\n        onUpdateStatus: this.onChangeStatus,\n        onChange: this.onChangeStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }\n      });\n    }) : \"\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      state: this.props.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, this.props.match.params.likedMovie === \"likedMovie\" ? this.showListMovieLiked(this.state.listMovies) : null), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Recommended;","map":{"version":3,"sources":["E:/Workspace/project-manager/src/components/RecommendComponent.js"],"names":["React","Component","Header","MovieItemComponent","Footer","axios","Recommended","constructor","props","onChangeStatus","id","console","log","state","listMovies","map","item","index","isLiked","setState","localStorage","setItem","JSON","stringify","user","loggedInStatus","showListMovieLiked","bind","getList","get","req","res","data","status","list","componentWillMount","parse","getItem","movie","name","description","rateScore","actors","releaseDate","imageUrl","render","match","params","likedMovie"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Header from \"../components/header\";\r\nimport MovieItemComponent from \"../components/MovieItemComponent\";\r\nimport Footer from \"../components/Footer\";\r\nimport axios from \"axios\";\r\n\r\nclass Recommended extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listMovies: [],\r\n            user: this.props.state.user,\r\n            loggedInStatus: this.props.state.loggedInStatus\r\n        };\r\n        this.showListMovieLiked = this.showListMovieLiked.bind(this);\r\n    }\r\n\r\n    getList() {\r\n        axios.get(\"http://localhost:5000/api/recommend/1\", (req, res) => {\r\n            if (res.data.status === \"success\") {\r\n                this.setState({\r\n                    listMovies: res.data.list,\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        let list = [];\r\n        list = JSON.parse(localStorage.getItem(\"list\"));\r\n        this.setState({\r\n            listMovies: list,\r\n        });\r\n    }\r\n    \r\n    onChangeStatus = (id) => {\r\n        console.log(\"movie id:\" + id);\r\n        this.state.listMovies.map((item, index) => {\r\n            if (index === id) {\r\n                item.isLiked = !item.isLiked;\r\n                console.log(\"status: \" + item.isLiked);\r\n                this.state.listMovies[id] = item;\r\n                this.setState({\r\n                    listMovies: this.state.listMovies,\r\n                });\r\n\r\n                localStorage.setItem(\"list\", JSON.stringify(this.state.listMovies));\r\n            }\r\n        });\r\n    };\r\n    showListMovieLiked(listMovies) {\r\n        return (\r\n            <div>\r\n                {listMovies != null\r\n                    ? listMovies.map((movie, index) => {\r\n                        if (movie.isLiked)\r\n                            return (\r\n                                <MovieItemComponent\r\n                                    key={index}\r\n                                    id={index}\r\n                                    name={movie.name}\r\n                                    description={movie.description}\r\n                                    rateScore={movie.rateScore}\r\n                                    actors={movie.actors}\r\n                                    releaseDate={movie.releaseDate}\r\n                                    imageUrl={movie.imageUrl}\r\n                                    isLiked={movie.isLiked}\r\n                                    onUpdateStatus={this.onChangeStatus}\r\n                                    onChange={this.onChangeStatus}\r\n                                />\r\n                            );\r\n                    })\r\n                    : \"\"}\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header state={this.props.state} />\r\n                <div>\r\n                    {this.props.match.params.likedMovie === \"likedMovie\"\r\n                        ? this.showListMovieLiked(this.state.listMovies)\r\n                        : null}\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Recommended;\r\n"]},"metadata":{},"sourceType":"module"}